# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .dimension_id_in_data import DimensionIdInData


class BatchV2WorkforcePlanDetailRequestBody(object):
    _types = {
        "workforce_plan_id": str,
        "is_centralized_reporting_project": bool,
        "centralized_reporting_project_id": str,
        "dimension_id_in_datas": List[DimensionIdInData],
    }

    def __init__(self, d=None):
        self.workforce_plan_id: Optional[str] = None
        self.is_centralized_reporting_project: Optional[bool] = None
        self.centralized_reporting_project_id: Optional[str] = None
        self.dimension_id_in_datas: Optional[List[DimensionIdInData]] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "BatchV2WorkforcePlanDetailRequestBodyBuilder":
        return BatchV2WorkforcePlanDetailRequestBodyBuilder()


class BatchV2WorkforcePlanDetailRequestBodyBuilder(object):
    def __init__(self) -> None:
        self._batch_v2_workforce_plan_detail_request_body = BatchV2WorkforcePlanDetailRequestBody()

    def workforce_plan_id(self, workforce_plan_id: str) -> "BatchV2WorkforcePlanDetailRequestBodyBuilder":
        self._batch_v2_workforce_plan_detail_request_body.workforce_plan_id = workforce_plan_id
        return self

    def is_centralized_reporting_project(self,
                                         is_centralized_reporting_project: bool) -> "BatchV2WorkforcePlanDetailRequestBodyBuilder":
        self._batch_v2_workforce_plan_detail_request_body.is_centralized_reporting_project = is_centralized_reporting_project
        return self

    def centralized_reporting_project_id(self,
                                         centralized_reporting_project_id: str) -> "BatchV2WorkforcePlanDetailRequestBodyBuilder":
        self._batch_v2_workforce_plan_detail_request_body.centralized_reporting_project_id = centralized_reporting_project_id
        return self

    def dimension_id_in_datas(self, dimension_id_in_datas: List[
        DimensionIdInData]) -> "BatchV2WorkforcePlanDetailRequestBodyBuilder":
        self._batch_v2_workforce_plan_detail_request_body.dimension_id_in_datas = dimension_id_in_datas
        return self

    def build(self) -> "BatchV2WorkforcePlanDetailRequestBody":
        return self._batch_v2_workforce_plan_detail_request_body
