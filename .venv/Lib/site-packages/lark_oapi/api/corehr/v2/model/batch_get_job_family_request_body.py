# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class BatchGetJobFamilyRequestBody(object):
    _types = {
        "job_family_ids": List[str],
    }

    def __init__(self, d=None):
        self.job_family_ids: Optional[List[str]] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "BatchGetJobFamilyRequestBodyBuilder":
        return BatchGetJobFamilyRequestBodyBuilder()


class BatchGetJobFamilyRequestBodyBuilder(object):
    def __init__(self) -> None:
        self._batch_get_job_family_request_body = BatchGetJobFamilyRequestBody()

    def job_family_ids(self, job_family_ids: List[str]) -> "BatchGetJobFamilyRequestBodyBuilder":
        self._batch_get_job_family_request_body.job_family_ids = job_family_ids
        return self

    def build(self) -> "BatchGetJobFamilyRequestBody":
        return self._batch_get_job_family_request_body
