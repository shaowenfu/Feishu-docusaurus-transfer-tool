# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .doc_chunk_table_row import DocChunkTableRow


class DocChunkTableDetail(object):
    _types = {
        "table_idx": int,
        "text": str,
        "cells": List[DocChunkTableRow],
    }

    def __init__(self, d=None):
        self.table_idx: Optional[int] = None
        self.text: Optional[str] = None
        self.cells: Optional[List[DocChunkTableRow]] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "DocChunkTableDetailBuilder":
        return DocChunkTableDetailBuilder()


class DocChunkTableDetailBuilder(object):
    def __init__(self) -> None:
        self._doc_chunk_table_detail = DocChunkTableDetail()

    def table_idx(self, table_idx: int) -> "DocChunkTableDetailBuilder":
        self._doc_chunk_table_detail.table_idx = table_idx
        return self

    def text(self, text: str) -> "DocChunkTableDetailBuilder":
        self._doc_chunk_table_detail.text = text
        return self

    def cells(self, cells: List[DocChunkTableRow]) -> "DocChunkTableDetailBuilder":
        self._doc_chunk_table_detail.cells = cells
        return self

    def build(self) -> "DocChunkTableDetail":
        return self._doc_chunk_table_detail
